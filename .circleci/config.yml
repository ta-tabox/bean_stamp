version: 2.1 # 2.1 を使うと Orb や他の機能を使用することができる

# 設定で使用する Orb を宣言
orbs:
  ruby: circleci/ruby@1.7.1
  node: circleci/node@5.0.2
  heroku: circleci/heroku@1.2.6

jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.4-node # ruby3.0.4, nodeを含むイメージ
    steps:
      - checkout # Git コードをプルダウン
      - ruby/install-deps # Ruby Orb を使って依存関係をインストール
      - node/install-packages: # Node Orb を使ってパッケージをインストール
          pkg-manager: yarn

  checking:
    docker:
      - image: cimg/ruby:3.0.4-node
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop

  test:
    # テストを高速化するために「並列ジョブコンテナ」を実行
    parallelism: 3
    docker:
      - image: cimg/ruby:3.0.4-node
        environment:
          SELENIUM_DRIVER_URL: http://chrome:4444/wd/hub
      - image: cimg/mysql:8.0.28 # mysqlイメージ, 開発環境のDocker環境と合わせる
        command: --default-authentication-plugin=mysql_native_password
        environment: # mysql用の環境変数
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_ROOT_HOST: "%"
          MYSQL_HOST: db
        name: db
      - image: selenium/standalone-chrome-debug:latest # capybaraによるテストで使用する
        name: chrome
    # Ruby/Rails 固有の環境変数をプライマリコンテナに適用
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      MYSQL_HOST: db
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      # データベース上で実行する前にセカンダリコンテナが起動することを確認
      - run:
          command: "dockerize -wait tcp://db:3306 -timeout 1m"
          name: Wait for DB
      - run:
          command: "bundle exec rails db:create"
          name: Database create
      - run:
          command: "bundle exec rails db:schema:load --trace"
          name: Database setup
      - ruby/rspec-test:
          include: spec/**/*_spec.rb

  deploy:
    docker:
      - image: cimg/ruby:3.0.4-node
        environment:
          BUNDLER_VERSION: 2.2.33
    steps:
      - checkout
      - ruby/install-deps
      # - node/install-packages:
      #     pkg-manager: yarn
      #     cache-path: "yarn.lock"
      - add_ssh_keys:
          fingerprints: "f3:40:df:8b:91:b2:82:6d:3c:2d:42:6e:6a:ea:af:b4"
      - deploy:
          name: Capistrano deploy
          command: bundle exec cap production deploy

workflows:
  build_test_and_deploy:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build
      - deploy
        # requires:
        #   - test
        # filters:
        #   branches:
        #     only: master
      # - heroku/deploy-via-git: # herokuへ自動デプロイ
      #     requires:
      #       - build
      #       - test
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     branch: master
      #     post-steps:
      #       - run: "heroku run rails db:migrate --app $HEROKU_APP_NAME"
